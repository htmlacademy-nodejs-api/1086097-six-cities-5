openapi: 3.0.0
info:
  title: API сервер для демо-проекта Шесть городов
  description: Список ресурсов и маршрутов сервера Шесть городов
  license:
    name: MIT
    url: https://opensource.org/locense/MIT
  version: "1.0.0"
tags:
  - name: offers
    description: Действия с предложениями.
  - name: comments
    description: Действия с комментариями.
  - name: users
    description: Действия с пользователями.

paths:
  /users/register:
    post:
      tags:
       -  users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя.

      requestBody:
        description: Информация для создания нового пользователя
        content:
          application/json:
            schema:
              $ref: '#components/schemas/createUser'
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "400":
          description: Неправильные регистрационные данные

        "409":
          description: Пользователь с таким mail уже существует.

  /users/login:
   post:
      tags:
       -  users
      summary: Авторизация пользователя
      description: Авторизует пользователя на основе логина и пароля.

      requestBody:
        description: Информация для авторизации существующего пользователя
        content:
          application/json:
            schema:
              $ref: '#components/schemas/authUser'
        required: true

      responses:
        "200":
          description: Пользователь авторизован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "400":
          description: Неправильный логин или пароль.
  /users:
   get:
      tags:
       -  users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю.

      responses:
        "200":
          description: Пользователь авторизован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "401":
          description: Пользователь не авторизован.

  /users/logout:
   delete:
      tags:
       -  users
      summary: Завершить сеанс пользователя
      description: Завершает сеанс работы - выход из закрытой части приложения.

      responses:
        "204":
          description: Сеанс завершен.

  /offers/:
    post:
      tags:
        - offers
      summary: Создать предложение
      description: Создает новое предложение от авторизованного пользователя.

      requestBody:
        description: Информация для создания нового предложения
        content:
          application/json:
            schema:
              $ref: '#components/schemas/createOffer'
        required: true

      responses:
        "201":
          description: Предложение создано. Объект предложения.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        "400":
          description: Неправильные данные по предложению

        "401":
          description: Создание предложения возможно только для зарегистрированных пользователей.

  /offers/{id}:
    post:
      tags:
        - offers
      summary: Редактировать предложение
      description: Изменяет существующее предложение от авторизованного пользователя.

      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true

      requestBody:
        description: Информация для обновления предложения
        content:
          application/json:
            schema:
              $ref: '#components/schemas/createOffer'
        required: true

      responses:
        "201":
          description: Предложение обновлено. Объект предложения.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        "400":
          description: Неправильные данные по предложению

        "401":
          description: Обновление предложения возможно только для зарегистрированных пользователей.

  /offers/{id}/delete:
    delete:
      tags:
        - offers
      summary: Удалить предложение
      description: Удаляет существующее предложение от авторизованного пользователя.

      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true

      responses:
        "204":
          description: Предложение удалено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        "401":
          description: Удаление предложения возможно только для зарегистрированных пользователей.

        "404":
          description: Запрашиваемые данные не найдены

  /offers:
    get:
      tags:
        - offers
      summary: Получить список предложений
      description: Возвращает массив предложений. Каждое предложение описано в виде объекта.

      parameters:
        - name: count
          in: path
          schema:
            type: number
          required: false

      responses:
        "200":
          description: Массив предложений.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers'

        "404":
          description: Запрашиваемые данные не найдены

  /offers{id}:
    get:
      tags:
        - offers
      summary: Получить предложение
      description: Возвращает предложение с идентификатором id

      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true

      responses:
        "200":
          description: Объект предложения.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        "404":
          description: Предложение не найдено

  /offers/favorite:
    get:
      tags:
        - offers
      summary: Получить список избранных предложений
      description: Возвращает массив предложений, добавленных в избранное.

      responses:
        "200":
          description: Массив предложений.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers'

        "401":
          description: Просмотр избранных предложений возможен только для зарегистрированных пользователей.

  /offers/{id}/favorite:
    patch:
      tags:
        - offers
      summary: Добавляет в избранное предложение
      description: Возвращает предложение с идентификатором id с актуальным состоянием поля favorite.

      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: status
          in: path
          schema:
            type: number
          required: true

      responses:
        "200":
          description: Объект предложения.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        "201":
          description: Объект предложения.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        "400":
          description: Ошибка тела запроса.

        "401":
          description: Пользователь не авторизован.

        "404":
          description: Предложение не найдено.

        "409":
          description: Приложение уже добавлено в избранное.

    delete:
      tags:
        - offers
      summary: Удаляет из избранного предложение
      description: Возвращает предложение с идентификатором id с актуальным состоянием поля favorite.

      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: status
          in: path
          schema:
            type: number
          required: true

      responses:
        "200":
          description: Объект предложения.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        "201":
          description: Объект предложения.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        "400":
          description: Ошибка тела запроса.

        "401":
          description: Пользователь не авторизован.

        "404":
          description: Предложение не найдено.

        "409":
          description: Приложение уже добавлено в избранное.

  /comments/{id}:
    get:
      tags:
        - comments

      summary: Получить список комментариев
      description: Возвращает список комментариев для предложения с идентификатором id.

      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true

      responses:
        "200":
          description: Массив комментариев.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comments'

        "404":
          description: Предложение не найдено

    post:
      tags:
        - comments

      summary: Добавить новый комментарий
      description: Добавляет новый комментарий для предложения с идентификатором id.

      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true

      responses:
        "200":
          description: Объект с новым комментарием.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment'

        "400":
          description: Ошибка тела запроса

        "401":
          description: Пользователь не авторизован

        "404":
          description: Предложение не найдено

components:
  schemas:
    createUser:
     type: object

     properties:
        name:
          type: string
          example: Nickolay

        mail:
          type: string
          example: mail@mail.com

        avatar:
          type: string
          example: avatar.jpg

        password:
          type: string
          example: 123456789

        userType:
          type: string
          example: обычный

    user:
     type: object

     properties:
        name:
          type: string
          example: Nickolay

        mail:
          type: string
          example: mail@mail.com

        avatar:
          type: string
          example: avatar.jpg

        userType:
         type: boolean
         example: обычный

        token:
          type: string
          example: T2xpdmVyLmNvbm5lckBnbWFpbC5jb20=

    authUser:
     type: object

     properties:
        mail:
          type: string
          example: mail@mail.com

        password:
          type: string
          example: 123456789

    createOffer:
     type: object

     properties:
        title:
          type: string
          example: Nice, cozy, warm big bed apartment
        description:
          type: string
          example: 'I am happy to welcome you to my apartment in the city center! Three words: location, cosy and chic!'
        postDate:
          type: string
          example: ISODate('2023-10-04T19:37:06.828Z')
        city:
          type: object
          example:
            name:
            type: string
            example: Brussels
            location:
              type: object
              example:
                latitude:
                  type: number
                  example: 50.846557
                longitude:
                  type: number
                  example: 4.351697
        imagePreview:
          type: string
          example: image-9.jpg
        images:
          type: array
          example:  ['image-9.jpg','image-8.jpg','image-5.jpg','image-6.jpg','image-7.jpg','image-12.jpg']
        premium:
          type: boolean
          example: false
        favourite:
          type: boolean
          example: false
        rating:
          type: number
          example: 3
        apartmentType:
          type: string
          example: room
        roomCount:
          type: number
          example: 3
        guestsCount:
          type: number
          example: 3
        cost:
          type: number
          example: 52866
        comfort:
          type: array
          example: ['Washer','Towels','Fridge']
        commentsCount:
          type: number
          example: 0
        location:
          type: object
          example:
            latitude:
              type: number
              example: 50.934361
            longitude:
              type: number
              example: 6.943974

    offer:
     type: object

     properties:
        title:
          type: string
          example: Nice, cozy, warm big bed apartment
        description:
          type: string
          example: 'I am happy to welcome you to my apartment in the city center! Three words: location, cosy and chic!'
        postDate:
          type: string
          example: ISODate('2023-10-04T19:37:06.828Z')
        city:
          type: object
          example:
            name:
            type: string
            example: Brussels
            location:
              type: object
              example:
                latitude:
                  type: number
                  example: 50.846557
                longitude:
                  type: number
                  example: 4.351697
        imagePreview:
          type: string
          example: image-9.jpg
        images:
          type: array
          example:  ['image-9.jpg','image-8.jpg','image-5.jpg','image-6.jpg','image-7.jpg','image-12.jpg']
        premium:
          type: boolean
          example: false
        favourite:
          type: boolean
          example: false
        rating:
          type: number
          example: 3
        type:
          type: string
          example: room
        roomCount:
          type: number
          example: 3
        guestsCount:
          type: number
          example: 3
        cost:
          type: number
          example: 52866
        comfort:
          type: array
          example: ['Washer','Towels','Fridge']
        id:
          type: string
          example: 65245ce712734e5eb67b7410
        commentsCount:
          type: number
          example: 1
        location:
          type: object
          example:
            latitude:
              type: number
              example: 50.934361
            longitude:
              type: number
              example: 6.943974

    offers:
     type: array

     properties:
        title:
          type: string
          example: Nice, cozy, warm big bed apartment
        postDate:
          type: string
          example: ISODate('2023-10-04T19:37:06.828Z')
        city:
          type: object
          example:
            name:
            type: string
            example: Brussels
            location:
              type: object
              example:
                latitude:
                  type: number
                  example: 50.846557
                longitude:
                  type: number
                  example: 4.351697
        imagePreview:
          type: string
          example: image-9.jpg
        images:
          type: array
          example:  ['image-9.jpg','image-8.jpg','image-5.jpg','image-6.jpg','image-7.jpg','image-12.jpg']
        premium:
          type: boolean
          example: false
        favourite:
          type: boolean
          example: false
        rating:
          type: number
          example: 3.2
        type:
          type: string
          example: room
        cost:
          type: number
          example: 52866
        commentsCount:
          type: number
          example: 1
        location:
          type: object
          example:
            latitude:
              type: number
              example: 50.934361
            longitude:
              type: number
              example: 6.943974

    comments:
     type: array

     properties:
      text:
        type: string
        example: 'We loved it so much, the house, the view, the location just great.. Highly recommend :)'
      rating:
        type: number
        example: 3
      userId:
        type: string
        example: 654388f403b3ca0ff2aa90b5
      offerId:
        type: string
        example: 6543906d1de6e37dbe9b4c5f

    comment:
     type: object

     properties:
      text:
        type: string
        example: 'We loved it so much, the house, the view, the location just great.. Highly recommend :)'
      rating:
        type: number
        example: 3
      userId:
        type: string
        example: 654388f403b3ca0ff2aa90b5
      offerId:
        type: string
        example: 6543906d1de6e37dbe9b4c5f
